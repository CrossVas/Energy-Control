buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.16.5-0.2.1a'
repositories {
    maven { url 'https://modmaven.dev/' }
    maven {
        url 'https://squiddev.cc/maven/'
        content {
            includeGroup 'org.squiddev'
        }
    }
    maven {
        name 'CurseMaven'
        url "https://www.cursemaven.com"
    }
}
group = 'com.zuxelus.energycontrol'
archivesBaseName = 'EnergyControl-forge'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                EnergyControl {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                EnergyControl {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                EnergyControl {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.4'
    compileOnly fg.deobf ("mekanism:Mekanism:${mekanism_version}")
    compileOnly fg.deobf ("mekanism:Mekanism:${mekanism_version}:generators")
    compileOnly fg.deobf ("curse.maven:ae2-223794:3455386")
    compileOnly fg.deobf ("curse.maven:botania-225643:3386883")
    compileOnly fg.deobf ("curse.maven:curios-309927:3456953")
    compileOnly fg.deobf ("curse.maven:patchouli-306770:3459118")
    compileOnly fg.deobf ("org.squiddev:cc-tweaked-${minecraft_version}:${cct_version}")
    compileOnly fg.deobf ("curse.maven:jei-238222:3438494")
    compileOnly fg.deobf ("curse.maven:extremereactors-250277:3426518")
    compileOnly fg.deobf ("curse.maven:zerocore-247921:3426514")
    compileOnly fg.deobf ("curse.maven:biggerreactors-407780:3407098")
    compileOnly fg.deobf ("curse.maven:phosphophyllite-412551:3397407")
    compileOnly fg.deobf ("curse.maven:thermal_expansion-69163:3404884");
    compileOnly fg.deobf ("curse.maven:thermal_foundation-222880:3412300");
    compileOnly fg.deobf ("curse.maven:cofh_core-69162:3407019");
    compileOnly fg.deobf ("curse.maven:ImmersiveEngineering-231951:3431122");
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
