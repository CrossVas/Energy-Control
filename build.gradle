buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "$VERSION_MC-$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"
group = "com.zuxelus.energycontrol"
archivesBaseName = "EnergyControl"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
  version = "1.12.2-14.23.5.2847"
  runDir = "run"

  replaceIn "EnergyControl.java"
  replace "@VERSION@", project.version
  mappings = "snapshot_20171003"
}

repositories {
  maven { // IC2
    name = "Player maven"
    url = "http://maven.ic2.player.to/"
  }
  maven { // JEI
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven { // TechReborn, RebornCore
    name = "Modmuss maven"
    url = "http://maven.modmuss50.me/"
  }
}

dependencies {
  compile group: 'net.industrial-craft', name: 'industrialcraft-2', version: "$VERSION_IC2-ex112", classifier: 'dev'
	runtime group: 'mezz.jei', name: "jei_$VERSION_MC", version: VERSION_JEI
  deobfCompile(group: 'RebornCore', name: "RebornCore-$VERSION_MC", version: VERSION_REBORN_CORE, classifier: 'universal') {
    transitive = false
  }
  deobfCompile(group: 'TechReborn', name: "TechReborn-$VERSION_MC", version: VERSION_TR, classifier: 'universal') {
    transitive = false
  }
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version

  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }

  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

task apiJar(type: Jar) {
	from sourceSets.main.allSource
	from sourceSets.main.output
	include 'com/zuxelus/energycontrol/api/**'
	classifier = 'api'
}

artifacts {
	archives apiJar
}