buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
		maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }

    dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

version = '1.20.1-0.3.0'
group = 'com.zuxelus.energycontrol'


base {
    archivesName = 'EnergyControl-forge'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20.1'
    runs {
        configureEach {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "energycontrol" {
                    source sourceSets.main
                }
            }
        }

        client {
            arg '-mixin.config=energycontrol.mixins.json'
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.enabledGameTestNamespaces', 'energycontrol'
        }

        server {
            property 'forge.enabledGameTestNamespaces', 'energycontrol'
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', 'energycontrol'
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', 'energycontrol', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
         dir 'libs_'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.20.1-47.2.20"
    implementation 'io.netty:netty-codec-http:4.1.82.Final'
    //compileOnly fg.deobf ("curse.maven:ae2-223794:5117032")
    compileOnly fg.deobf ("curse.maven:cctweaked-282001:5118388")
    compileOnly fg.deobf ("curse.maven:WTHIT-455982:5109481") //
    compileOnly fg.deobf ("curse.maven:badpackets-615134:4784395") //
    compileOnly fg.deobf ("curse.maven:jei-238222:5101366")
    compileOnly fg.deobf ("curse.maven:extremereactors-250277:4940344")
    compileOnly fg.deobf ("curse.maven:zerocore-247921:4940340")
    //compileOnly fg.deobf ("curse.maven:advancedgenerators-223622:4670654")
    compileOnly fg.deobf ("curse.maven:mekanism-268560:4866575")
    compileOnly fg.deobf ("curse.maven:mekanismgenerators-268566:4866578")
}

mixin {
    add sourceSets.main, "energycontrol.mixins.refmap.json"
    config "energycontrol.mixins.json"
}


tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : 'energycontrol',
                'Specification-Vendor'    : 'Zuxelus',
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : 'Zuxelus',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

/*publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}*/

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
